// function Question(question) {
//   function work() {

//   }

//   var question = {
//     description: "Тернарный оператор это ...",
//     answers: [sadsad, asd, dsa],
//     right_answer: answers[dsa],
//   };
// }

// function (random,) {

// }

var Question = function (question, answers, right_answer) {
  this.question = question;
  this.answers = answers;
  this.right_answer = right_answer;

  this.print = function printQuestion() {
    var questionsArray = [{question, answers, right_answer}];
    var random = Math.floor(Math.random() * questionsArray.length);
    console.log(`${random + 1} Вопрос: `, questionsArray[random].question);

    for (let i = 0; i < answers.length; i++) {
      console.log(answers[i])
    }
    console.log("\n")
  };
};

var quest1 = new Question(
  "Тернарный оператор это ...?",
  ["Условие if/else", "Работа с циклом", "Объект"],
  0
);
var quest2 = new Question(
  "Выбрать основную функцию IIFE:",
  [
    "Скрытие от внешней области видимости.",
    "Создание собственной области видимости.",
    "Cкрытие от внешней области видимости и создание собственной области видимостикт.",
  ],
  2
);

var quest3 = new Question(
  "Для чего используется паттерн-модуль ?",
  [
    "Для ограничения области видимости переменных.",
    "Для соединения с глобальной облости видимости.",
    "Для ограничения области видимости переменных и объединения кода в единный модуль.",
  ],
  2
);

var quest4 = new Question(
  "Верно ли следующее утверждение и к чему это приводит: Каждый объект в JS имеет свойство Prototype",
  [
    "Неверно.",
    "Верно, это не обеспечивает наследование в JS.",
    "Верно, это обеспечивает наследование в JS.",
  ],
  2
);

var questions = [quest1, quest2, quest3, quest4]
console.log(questions)
quest1.print()
quest2.print()
quest3.print()
quest4.print()


// var quest5 = new Question("", ["", "", ""]);

/* 
5 Вопрос: Конструкторы это ...?
1) Экземепляры 
2) Облегчение записи методов 
3) Объекты 

6 Вопрос: Свйоство Prototype в объекте это ...?
1) Это протоип всех экзепляров, которые были созданы с помощью конструктора.
2) Это примитивы и значения объектов данного метода. 
3) Это место куда мы записываем методы и свойства, которые будут наследовать другие объекты.

7 Вопрос: Что такое прототипное наследование или цепочка прототипов:
1) Когда происходит вызов определенного метода/свойства, сначала поиск проиходит в протоимпе объекта, если свойство/объект не найдены, происходит поиск по объекту в котором они вызываются. Так происходит пока метод не будет найден
2) Это место куда мы записываем методы и свойства, которые будут наследовать другие объекты.
3) Когда происходит вызов определенного метода/свойства, сначала происходит поиск по объекту в котором они вызываются, если свойство/объект не найдены, поиск проиходит в протоимпе объекта. Так происходит пока метод не будет найден

8 Вопрос: Верно ли следующее утверждение и к чему это приводит: Каждый объект в JS имеет свойство Prototype
1) Неверно.
2) Верно, это не обеспечивает наследование в JS.
3) Верно, это обеспечивает наследование в JS.

9 Вопрос: Выбрать основную функцию IIFE
1) Это повторно используемый код.
2) Это не повторно используемый код.
3) Этот код можно использовать лишь несколько раз.
 */

/* 
6 Вопрос: Свйоство Prototype в объекте это ...?
1) Это протоип всех экзепляров, которые были созданы с помощью конструктора.
2) Это примитивы и значения объектов данного метода. 
3) Это место куда мы записываем методы и свойства, которые будут наследовать другие объекты.

7 Вопрос: Что такое прототипное наследование или цепочка прототипов:
1) Когда происходит вызов определенного метода/свойства, сначала поиск проиходит в протоимпе объекта, если свойство/объект не найдены, происходит поиск по объекту в котором они вызываются. Так происходит пока метод не будет найден
2) Это место куда мы записываем методы и свойства, которые будут наследовать другие объекты.
3) Когда происходит вызов определенного метода/свойства, сначала происходит поиск по объекту в котором они вызываются, если свойство/объект не найдены, поиск проиходит в протоимпе объекта. Так происходит пока метод не будет найден

8 Вопрос: Верно ли следующее утверждение и к чему это приводит: Каждый объект в JS имеет свойство Prototype
1) Неверно.
2) Верно, это не обеспечивает наследование в JS.
3) Верно, это обеспечивает наследование в JS.

9 Вопрос: Выбрать основную функцию IIFE
1) Это повторно используемый код.
2) Это не повторно используемый код.
3) Этот код можно использовать лишь несколько раз.

10 Вопрос: 
1)
2)
3)

11 Вопрос: 
1) 
2)
3) 

12 Вопрос: 
1)
2)
3)

13 Вопрос: 
1)
2)
3)

14 Вопрос: Выбрать основную функцию IIFE
1) Вызывается она как обычная функция 
2) Немедленно вызывает функцию 
3) Вызывается через пару минут после написания кода 

15 Вопрос: Как воспринимает JS данную операцию - ()
1) Выполнить 
2) Сократить 
3) Умножить

16 Вопрос: 
1)
2)
3)

17 Вопрос: 
1) 
2)
3) 

18 Вопрос: 
1)
2)
3)

19 Вопрос: 
1)
2)
3)

20 Вопрос: 
1)
2)
3)

21 Вопрос: 
1) 
2)
3) 

22 Вопрос: 
1)
2)
3)

23 Вопрос: 
1)
2)
3)

24 Вопрос: 
1)
2)
3)

25 Вопрос: 
1) 
2)
3) 

26 Вопрос: 
1)
2)
3)

27 Вопрос: 
1)
2)
3)

28 Вопрос: 
1) 
2)
3) 

29 Вопрос: 
1)
2)
3)

30 Вопрос: 
1)
2)
3)

*/
